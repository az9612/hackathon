{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'ChatbotPopup',\n  data() {\n    return {\n      isOpen: false,\n      userInput: '',\n      messages: []\n    };\n  },\n  methods: {\n    togglePopup() {\n      this.isOpen = !this.isOpen;\n      this.$nextTick(() => {\n        if (this.isOpen) this.scrollToBottom();\n      });\n    },\n    sendMessage() {\n      const message = this.userInput.trim();\n      if (!message) return;\n\n      // Add user message to chat log\n      this.messages.push({\n        from: 'user',\n        text: message\n      });\n      this.userInput = '';\n\n      // Scroll to bottom after adding message\n      this.scrollToBottom();\n      fetch(\"https://openrouter.ai/api/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": \"Bearer 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\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          model: \"mistralai/mistral-7b-instruct\",\n          messages: [{\n            role: \"user\",\n            content: message\n          }]\n        })\n      }).then(res => res.json()).then(data => {\n        const reply = data.choices[0].message.content;\n        this.messages.push({\n          from: 'bot',\n          text: reply\n        });\n        this.scrollToBottom();\n      }).catch(err => {\n        console.error(\"Error fetching reply:\", err);\n        this.messages.push({\n          from: 'bot',\n          text: \"Oops, something went wrong.\"\n        });\n      });\n    },\n    scrollToBottom() {\n      this.$nextTick(() => {\n        const chatLog = this.$refs.chatLog;\n        if (chatLog) chatLog.scrollTop = chatLog.scrollHeight;\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","isOpen","userInput","messages","methods","togglePopup","$nextTick","scrollToBottom","sendMessage","message","trim","push","from","text","fetch","method","headers","body","JSON","stringify","model","role","content","then","res","json","reply","choices","catch","err","console","error","chatLog","$refs","scrollTop","scrollHeight"],"sources":["C:\\Users\\afiqz\\Desktop\\hack-vue-boot\\vue3-bootstrap5-landing\\src\\components\\ChatbotPopup.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Toggle Button -->\n    <button class=\"btn btn-primary rounded-circle position-fixed\"\n            style=\"bottom: 20px; right: 20px; z-index: 1050;\"\n            @click=\"togglePopup\">\n      ðŸ’¬\n    </button>\n\n    <!-- Chat Popup -->\n    <div v-if=\"isOpen\" class=\"card shadow position-fixed\"\n         style=\"bottom: 80px; right: 20px; width: 300px; z-index: 1050;\">\n      <div class=\"card-header bg-primary text-white\">\n        Chatbot\n        <button type=\"button\" class=\"btn-close btn-close-white float-end\" @click=\"togglePopup\"></button>\n      </div>\n      <div class=\"card-body\" style=\"height: 300px; overflow-y: auto;\" ref=\"chatLog\">\n        <div class=\"text-muted mb-2\">Hi! How can I help you?</div>\n        <div v-for=\"(msg, index) in messages\" :key=\"index\" :class=\"{'text-end': msg.from === 'user', 'text-start': msg.from === 'bot'}\">\n          <span\n            :class=\"['badge', msg.from === 'user' ? 'bg-secondary' : 'bg-light text-dark']\"\n            style=\"white-space: pre-wrap; word-break: break-word; display: inline-block; max-width: 100%;\">\n            {{ msg.text }}\n          </span>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <div class=\"input-group\">\n          <input v-model=\"userInput\" @keyup.enter=\"sendMessage\" class=\"form-control\" placeholder=\"Type a message...\" />\n          <button class=\"btn btn-primary\" @click=\"sendMessage\">Send</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ChatbotPopup',\n  data() {\n    return {\n      isOpen: false,\n      userInput: '',\n      messages: []\n    };\n  },\n  methods: {\n    togglePopup() {\n      this.isOpen = !this.isOpen;\n      this.$nextTick(() => {\n        if (this.isOpen) this.scrollToBottom();\n      });\n    },\n    sendMessage() {\n      const message = this.userInput.trim();\n      if (!message) return;\n\n      // Add user message to chat log\n      this.messages.push({ from: 'user', text: message });\n      this.userInput = '';\n\n      // Scroll to bottom after adding message\n      this.scrollToBottom(); \n      fetch(\"https://openrouter.ai/api/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": \"Bearer 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\",\n          \"Content-Type\": \"application/json\"\n        },\n      body: JSON.stringify({\n      model: \"mistralai/mistral-7b-instruct\",\n      messages: [{ role: \"user\", content: message }]\n  })\n})\n.then(res => res.json())\n.then(data => {\n  const reply = data.choices[0].message.content;\n  this.messages.push({ from: 'bot', text: reply });\n  this.scrollToBottom();\n}).catch(err => {\n    console.error(\"Error fetching reply:\", err);\n    this.messages.push({ from: 'bot', text: \"Oops, something went wrong.\" });\n  });\n    },\n    scrollToBottom() {\n      this.$nextTick(() => {\n        const chatLog = this.$refs.chatLog;\n        if (chatLog) chatLog.scrollTop = chatLog.scrollHeight;\n      });\n    }\n  }\n};\n</script>\n"],"mappings":";AAqCA,eAAe;EACbA,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,KAAK;MACbC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACJ,MAAK,GAAI,CAAC,IAAI,CAACA,MAAM;MAC1B,IAAI,CAACK,SAAS,CAAC,MAAM;QACnB,IAAI,IAAI,CAACL,MAAM,EAAE,IAAI,CAACM,cAAc,CAAC,CAAC;MACxC,CAAC,CAAC;IACJ,CAAC;IACDC,WAAWA,CAAA,EAAG;MACZ,MAAMC,OAAM,GAAI,IAAI,CAACP,SAAS,CAACQ,IAAI,CAAC,CAAC;MACrC,IAAI,CAACD,OAAO,EAAE;;MAEd;MACA,IAAI,CAACN,QAAQ,CAACQ,IAAI,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,IAAI,EAAEJ;MAAQ,CAAC,CAAC;MACnD,IAAI,CAACP,SAAQ,GAAI,EAAE;;MAEnB;MACA,IAAI,CAACK,cAAc,CAAC,CAAC;MACrBO,KAAK,CAAC,+CAA+C,EAAE;QACrDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,eAAe,EAAE,kFAAkF;UACnG,cAAc,EAAE;QAClB,CAAC;QACHC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACrBC,KAAK,EAAE,+BAA+B;UACtCjB,QAAQ,EAAE,CAAC;YAAEkB,IAAI,EAAE,MAAM;YAAEC,OAAO,EAAEb;UAAQ,CAAC;QACjD,CAAC;MACH,CAAC,EACAc,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,EACtBF,IAAI,CAACvB,IAAG,IAAK;QACZ,MAAM0B,KAAI,GAAI1B,IAAI,CAAC2B,OAAO,CAAC,CAAC,CAAC,CAAClB,OAAO,CAACa,OAAO;QAC7C,IAAI,CAACnB,QAAQ,CAACQ,IAAI,CAAC;UAAEC,IAAI,EAAE,KAAK;UAAEC,IAAI,EAAEa;QAAM,CAAC,CAAC;QAChD,IAAI,CAACnB,cAAc,CAAC,CAAC;MACvB,CAAC,CAAC,CAACqB,KAAK,CAACC,GAAE,IAAK;QACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;QAC3C,IAAI,CAAC1B,QAAQ,CAACQ,IAAI,CAAC;UAAEC,IAAI,EAAE,KAAK;UAAEC,IAAI,EAAE;QAA8B,CAAC,CAAC;MAC1E,CAAC,CAAC;IACA,CAAC;IACDN,cAAcA,CAAA,EAAG;MACf,IAAI,CAACD,SAAS,CAAC,MAAM;QACnB,MAAM0B,OAAM,GAAI,IAAI,CAACC,KAAK,CAACD,OAAO;QAClC,IAAIA,OAAO,EAAEA,OAAO,CAACE,SAAQ,GAAIF,OAAO,CAACG,YAAY;MACvD,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}